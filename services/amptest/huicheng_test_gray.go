package amptest

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// HuichengTestGray invokes the amptest.HuichengTestGray API synchronously
func (client *Client) HuichengTestGray(request *HuichengTestGrayRequest) (response *HuichengTestGrayResponse, err error) {
	response = CreateHuichengTestGrayResponse()
	err = client.DoAction(request, response)
	return
}

// HuichengTestGrayWithChan invokes the amptest.HuichengTestGray API asynchronously
func (client *Client) HuichengTestGrayWithChan(request *HuichengTestGrayRequest) (<-chan *HuichengTestGrayResponse, <-chan error) {
	responseChan := make(chan *HuichengTestGrayResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.HuichengTestGray(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// HuichengTestGrayWithCallback invokes the amptest.HuichengTestGray API asynchronously
func (client *Client) HuichengTestGrayWithCallback(request *HuichengTestGrayRequest, callback func(response *HuichengTestGrayResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *HuichengTestGrayResponse
		var err error
		defer close(result)
		response, err = client.HuichengTestGray(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// HuichengTestGrayRequest is the request struct for api HuichengTestGray
type HuichengTestGrayRequest struct {
	*requests.RpcRequest
	Home HuichengTestGrayHome `position:"Query" name:"Home"  type:"Struct"`
}

// HuichengTestGrayHome is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHome struct {
	Address      HuichengTestGrayHomeAddress             `name:"Address" type:"Struct"`
	T            HuichengTestGrayHomeT                   `name:"T" type:"Struct"`
	PhoneNumbers *[]string                               `name:"PhoneNumbers" type:"Repeated"`
	DMap         map[string]HuichengTestGrayHomeDMapItem `name:"DMap" type:"Map"`
	NameToAge    map[string]string                       `name:"NameToAge" type:"Map"`
	Locations    *[]HuichengTestGrayHomeLocationsItem    `name:"Locations" type:"Repeated"`
}

// HuichengTestGrayHomeAddress is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeAddress struct {
	T        HuichengTestGrayHomeAddressT        `name:"T" type:"Struct"`
	Location HuichengTestGrayHomeAddressLocation `name:"Location" type:"Struct"`
	Detail   string                              `name:"Detail"`
}

// HuichengTestGrayHomeT is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeT struct {
	Class string `name:"Class"`
}

// HuichengTestGrayHomeDMapItem is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeDMapItem struct {
	Location HuichengTestGrayHomeDMapItemLocation `name:"Location" type:"Struct"`
	Detail   string                               `name:"Detail"`
}

// HuichengTestGrayHomeLocationsItem is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeLocationsItem struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGrayHomeAddressT is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeAddressT struct {
	Class string `name:"Class"`
}

// HuichengTestGrayHomeAddressLocation is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeAddressLocation struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGrayHomeDMapItemLocation is a repeated param struct in HuichengTestGrayRequest
type HuichengTestGrayHomeDMapItemLocation struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGrayResponse is the response struct for api HuichengTestGray
type HuichengTestGrayResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Size      int    `json:"Size" xml:"Size"`
	Value     string `json:"Value" xml:"Value"`
}

// CreateHuichengTestGrayRequest creates a request to invoke HuichengTestGray API
func CreateHuichengTestGrayRequest() (request *HuichengTestGrayRequest) {
	request = &HuichengTestGrayRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("AmpTest", "2020-12-30", "HuichengTestGray", "AmpTest", "openAPI")
	request.Method = requests.POST
	return
}

// CreateHuichengTestGrayResponse creates a response to parse from HuichengTestGray response
func CreateHuichengTestGrayResponse() (response *HuichengTestGrayResponse) {
	response = &HuichengTestGrayResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
