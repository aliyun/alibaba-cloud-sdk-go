package amptest

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// HuichengTestGraySecond invokes the amptest.HuichengTestGraySecond API synchronously
func (client *Client) HuichengTestGraySecond(request *HuichengTestGraySecondRequest) (response *HuichengTestGraySecondResponse, err error) {
	response = CreateHuichengTestGraySecondResponse()
	err = client.DoAction(request, response)
	return
}

// HuichengTestGraySecondWithChan invokes the amptest.HuichengTestGraySecond API asynchronously
func (client *Client) HuichengTestGraySecondWithChan(request *HuichengTestGraySecondRequest) (<-chan *HuichengTestGraySecondResponse, <-chan error) {
	responseChan := make(chan *HuichengTestGraySecondResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.HuichengTestGraySecond(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// HuichengTestGraySecondWithCallback invokes the amptest.HuichengTestGraySecond API asynchronously
func (client *Client) HuichengTestGraySecondWithCallback(request *HuichengTestGraySecondRequest, callback func(response *HuichengTestGraySecondResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *HuichengTestGraySecondResponse
		var err error
		defer close(result)
		response, err = client.HuichengTestGraySecond(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// HuichengTestGraySecondRequest is the request struct for api HuichengTestGraySecond
type HuichengTestGraySecondRequest struct {
	*requests.RpcRequest
	Home HuichengTestGraySecondHome `position:"Query" name:"Home"  type:"Struct"`
}

// HuichengTestGraySecondHome is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHome struct {
	Address      HuichengTestGraySecondHomeAddress             `name:"Address" type:"Struct"`
	T            HuichengTestGraySecondHomeT                   `name:"T" type:"Struct"`
	PhoneNumbers *[]string                                     `name:"PhoneNumbers" type:"Repeated"`
	DMap         map[string]HuichengTestGraySecondHomeDMapItem `name:"DMap" type:"Map"`
	NameToAge    map[string]string                             `name:"NameToAge" type:"Map"`
	Locations    *[]HuichengTestGraySecondHomeLocationsItem    `name:"Locations" type:"Repeated"`
}

// HuichengTestGraySecondHomeAddress is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeAddress struct {
	T        HuichengTestGraySecondHomeAddressT        `name:"T" type:"Struct"`
	Location HuichengTestGraySecondHomeAddressLocation `name:"Location" type:"Struct"`
	Detail   string                                    `name:"Detail"`
}

// HuichengTestGraySecondHomeT is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeT struct {
	Class string `name:"Class"`
}

// HuichengTestGraySecondHomeDMapItem is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeDMapItem struct {
	Location HuichengTestGraySecondHomeDMapItemLocation `name:"Location" type:"Struct"`
	Detail   string                                     `name:"Detail"`
}

// HuichengTestGraySecondHomeLocationsItem is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeLocationsItem struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGraySecondHomeAddressT is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeAddressT struct {
	Class string `name:"Class"`
}

// HuichengTestGraySecondHomeAddressLocation is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeAddressLocation struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGraySecondHomeDMapItemLocation is a repeated param struct in HuichengTestGraySecondRequest
type HuichengTestGraySecondHomeDMapItemLocation struct {
	Late string `name:"Late"`
	Lon  string `name:"Lon"`
}

// HuichengTestGraySecondResponse is the response struct for api HuichengTestGraySecond
type HuichengTestGraySecondResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Size      int    `json:"Size" xml:"Size"`
	Value     string `json:"Value" xml:"Value"`
}

// CreateHuichengTestGraySecondRequest creates a request to invoke HuichengTestGraySecond API
func CreateHuichengTestGraySecondRequest() (request *HuichengTestGraySecondRequest) {
	request = &HuichengTestGraySecondRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("AmpTest", "2020-12-30", "HuichengTestGraySecond", "AmpTest", "openAPI")
	request.Method = requests.POST
	return
}

// CreateHuichengTestGraySecondResponse creates a response to parse from HuichengTestGraySecond response
func CreateHuichengTestGraySecondResponse() (response *HuichengTestGraySecondResponse) {
	response = &HuichengTestGraySecondResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
