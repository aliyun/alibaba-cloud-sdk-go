package ros20190910

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateStack invokes the ros20190910.CreateStack API synchronously
// api document: https://help.aliyun.com/api/ros20190910/createstack.html
func (client *Client) CreateStack(request *CreateStackRequest) (response *CreateStackResponse, err error) {
	response = CreateCreateStackResponse()
	err = client.DoAction(request, response)
	return
}

// CreateStackWithChan invokes the ros20190910.CreateStack API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/createstack.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateStackWithChan(request *CreateStackRequest) (<-chan *CreateStackResponse, <-chan error) {
	responseChan := make(chan *CreateStackResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateStack(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateStackWithCallback invokes the ros20190910.CreateStack API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/createstack.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateStackWithCallback(request *CreateStackRequest, callback func(response *CreateStackResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateStackResponse
		var err error
		defer close(result)
		response, err = client.CreateStack(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateStackRequest is the request struct for api CreateStack
type CreateStackRequest struct {
	*requests.RpcRequest
	TimeoutInMinutes requests.Integer         `position:"Query" name:"TimeoutInMinutes"`
	StackName        string                   `position:"Query" name:"StackName"`
	DisableRollback  requests.Boolean         `position:"Query" name:"DisableRollback"`
	Parameters       *[]CreateStackParameters `position:"Query" name:"Parameters"  type:"Repeated"`
	ClientToken      string                   `position:"Query" name:"ClientToken"`
	TemplateBody     string                   `position:"Query" name:"TemplateBody"`
	TemplateURL      string                   `position:"Query" name:"TemplateURL"`
	NotificationURLs *[]string                `position:"Query" name:"NotificationURLs"  type:"Repeated"`
	StackPolicyBody  string                   `position:"Query" name:"StackPolicyBody"`
	OrderSource      string                   `position:"Query" name:"OrderSource"`
	ActivityId       string                   `position:"Query" name:"ActivityId"`
	StackPolicyURL   string                   `position:"Query" name:"StackPolicyURL"`
	ChannelId        string                   `position:"Query" name:"ChannelId"`
}

// CreateStackParameters is a repeated param struct in CreateStackRequest
type CreateStackParameters struct {
	ParameterValue string `name:"ParameterValue"`
	ParameterKey   string `name:"ParameterKey"`
}

// CreateStackResponse is the response struct for api CreateStack
type CreateStackResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	StackId   string `json:"StackId" xml:"StackId"`
}

// CreateCreateStackRequest creates a request to invoke CreateStack API
func CreateCreateStackRequest() (request *CreateStackRequest) {
	request = &CreateStackRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ros20190910", "2019-09-10", "CreateStack", "ros20190910", "openAPI")
	return
}

// CreateCreateStackResponse creates a response to parse from CreateStack response
func CreateCreateStackResponse() (response *CreateStackResponse) {
	response = &CreateStackResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
