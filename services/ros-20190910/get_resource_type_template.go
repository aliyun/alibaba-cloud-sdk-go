package ros20190910

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetResourceTypeTemplate invokes the ros20190910.GetResourceTypeTemplate API synchronously
// api document: https://help.aliyun.com/api/ros20190910/getresourcetypetemplate.html
func (client *Client) GetResourceTypeTemplate(request *GetResourceTypeTemplateRequest) (response *GetResourceTypeTemplateResponse, err error) {
	response = CreateGetResourceTypeTemplateResponse()
	err = client.DoAction(request, response)
	return
}

// GetResourceTypeTemplateWithChan invokes the ros20190910.GetResourceTypeTemplate API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/getresourcetypetemplate.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetResourceTypeTemplateWithChan(request *GetResourceTypeTemplateRequest) (<-chan *GetResourceTypeTemplateResponse, <-chan error) {
	responseChan := make(chan *GetResourceTypeTemplateResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetResourceTypeTemplate(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetResourceTypeTemplateWithCallback invokes the ros20190910.GetResourceTypeTemplate API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/getresourcetypetemplate.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetResourceTypeTemplateWithCallback(request *GetResourceTypeTemplateRequest, callback func(response *GetResourceTypeTemplateResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetResourceTypeTemplateResponse
		var err error
		defer close(result)
		response, err = client.GetResourceTypeTemplate(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetResourceTypeTemplateRequest is the request struct for api GetResourceTypeTemplate
type GetResourceTypeTemplateRequest struct {
	*requests.RpcRequest
	ResourceType string `position:"Query" name:"ResourceType"`
}

// GetResourceTypeTemplateResponse is the response struct for api GetResourceTypeTemplate
type GetResourceTypeTemplateResponse struct {
	*responses.BaseResponse
	RequestId    string                 `json:"RequestId" xml:"RequestId"`
	TemplateBody map[string]interface{} `json:"TemplateBody" xml:"TemplateBody"`
}

// CreateGetResourceTypeTemplateRequest creates a request to invoke GetResourceTypeTemplate API
func CreateGetResourceTypeTemplateRequest() (request *GetResourceTypeTemplateRequest) {
	request = &GetResourceTypeTemplateRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ros20190910", "2019-09-10", "GetResourceTypeTemplate", "ros20190910", "openAPI")
	return
}

// CreateGetResourceTypeTemplateResponse creates a response to parse from GetResourceTypeTemplate response
func CreateGetResourceTypeTemplateResponse() (response *GetResourceTypeTemplateResponse) {
	response = &GetResourceTypeTemplateResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
