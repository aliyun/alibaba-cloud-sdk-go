package ros20190910

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ListStacks invokes the ros20190910.ListStacks API synchronously
// api document: https://help.aliyun.com/api/ros20190910/liststacks.html
func (client *Client) ListStacks(request *ListStacksRequest) (response *ListStacksResponse, err error) {
	response = CreateListStacksResponse()
	err = client.DoAction(request, response)
	return
}

// ListStacksWithChan invokes the ros20190910.ListStacks API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/liststacks.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListStacksWithChan(request *ListStacksRequest) (<-chan *ListStacksResponse, <-chan error) {
	responseChan := make(chan *ListStacksResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListStacks(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ListStacksWithCallback invokes the ros20190910.ListStacks API asynchronously
// api document: https://help.aliyun.com/api/ros20190910/liststacks.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ListStacksWithCallback(request *ListStacksRequest, callback func(response *ListStacksResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListStacksResponse
		var err error
		defer close(result)
		response, err = client.ListStacks(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ListStacksRequest is the request struct for api ListStacks
type ListStacksRequest struct {
	*requests.RpcRequest
	ShowNestedStack requests.Boolean `position:"Query" name:"ShowNestedStack"`
	PageNumber      requests.Integer `position:"Query" name:"PageNumber"`
	PageSize        requests.Integer `position:"Query" name:"PageSize"`
	StackName       *[]string        `position:"Query" name:"StackName"  type:"Repeated"`
	ParentStackId   string           `position:"Query" name:"ParentStackId"`
	Status          *[]string        `position:"Query" name:"Status"  type:"Repeated"`
}

// ListStacksResponse is the response struct for api ListStacks
type ListStacksResponse struct {
	*responses.BaseResponse
	PageNumber int     `json:"PageNumber" xml:"PageNumber"`
	PageSize   int     `json:"PageSize" xml:"PageSize"`
	RequestId  string  `json:"RequestId" xml:"RequestId"`
	TotalCount int     `json:"TotalCount" xml:"TotalCount"`
	Stacks     []Stack `json:"Stacks" xml:"Stacks"`
}

// CreateListStacksRequest creates a request to invoke ListStacks API
func CreateListStacksRequest() (request *ListStacksRequest) {
	request = &ListStacksRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ros20190910", "2019-09-10", "ListStacks", "ros20190910", "openAPI")
	return
}

// CreateListStacksResponse creates a response to parse from ListStacks response
func CreateListStacksResponse() (response *ListStacksResponse) {
	response = &ListStacksResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
