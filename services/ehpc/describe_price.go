package ehpc

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribePrice invokes the ehpc.DescribePrice API synchronously
func (client *Client) DescribePrice(request *DescribePriceRequest) (response *DescribePriceResponse, err error) {
	response = CreateDescribePriceResponse()
	err = client.DoAction(request, response)
	return
}

// DescribePriceWithChan invokes the ehpc.DescribePrice API asynchronously
func (client *Client) DescribePriceWithChan(request *DescribePriceRequest) (<-chan *DescribePriceResponse, <-chan error) {
	responseChan := make(chan *DescribePriceResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribePrice(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribePriceWithCallback invokes the ehpc.DescribePrice API asynchronously
func (client *Client) DescribePriceWithCallback(request *DescribePriceRequest, callback func(response *DescribePriceResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribePriceResponse
		var err error
		defer close(result)
		response, err = client.DescribePrice(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribePriceRequest is the request struct for api DescribePrice
type DescribePriceRequest struct {
	*requests.RpcRequest
	Commodities *[]DescribePriceCommodities `position:"Query" name:"Commodities"  type:"Repeated"`
	PriceUnit   string                      `position:"Query" name:"PriceUnit"`
	ChargeType  string                      `position:"Query" name:"ChargeType"`
	OrderType   string                      `position:"Query" name:"OrderType"`
}

// DescribePriceCommodities is a repeated param struct in DescribePriceRequest
type DescribePriceCommodities struct {
	Amount                     string                               `name:"Amount"`
	Period                     string                               `name:"Period"`
	NodeType                   string                               `name:"NodeType"`
	DataDisks                  *[]DescribePriceCommoditiesDataDisks `name:"DataDisks" type:"Repeated"`
	SystemDiskCategory         string                               `name:"SystemDiskCategory"`
	InternetChargeType         string                               `name:"InternetChargeType"`
	SystemDiskPerformanceLevel string                               `name:"SystemDiskPerformanceLevel"`
	SystemDiskSize             string                               `name:"SystemDiskSize"`
	InternetMaxBandWidthOut    string                               `name:"InternetMaxBandWidthOut"`
	InstanceType               string                               `name:"InstanceType"`
	NetworkType                string                               `name:"NetworkType"`
}

// DescribePriceCommoditiesDataDisks is a repeated param struct in DescribePriceRequest
type DescribePriceCommoditiesDataDisks struct {
	Size               string `name:"size"`
	Encrypted          string `name:"encrypted"`
	PerformanceLevel   string `name:"performanceLevel"`
	Category           string `name:"category"`
	DeleteWithInstance string `name:"deleteWithInstance"`
}

// DescribePriceResponse is the response struct for api DescribePrice
type DescribePriceResponse struct {
	*responses.BaseResponse
	TotalTradePrice float64 `json:"TotalTradePrice" xml:"TotalTradePrice"`
	RequestId       string  `json:"RequestId" xml:"RequestId"`
	Prices          Prices  `json:"Prices" xml:"Prices"`
}

// CreateDescribePriceRequest creates a request to invoke DescribePrice API
func CreateDescribePriceRequest() (request *DescribePriceRequest) {
	request = &DescribePriceRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("EHPC", "2018-04-12", "DescribePrice", "", "")
	request.Method = requests.GET
	return
}

// CreateDescribePriceResponse creates a response to parse from DescribePrice response
func CreateDescribePriceResponse() (response *DescribePriceResponse) {
	response = &DescribePriceResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
