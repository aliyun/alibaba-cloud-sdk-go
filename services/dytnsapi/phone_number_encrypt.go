package dytnsapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// PhoneNumberEncrypt invokes the dytnsapi.PhoneNumberEncrypt API synchronously
func (client *Client) PhoneNumberEncrypt(request *PhoneNumberEncryptRequest) (response *PhoneNumberEncryptResponse, err error) {
	response = CreatePhoneNumberEncryptResponse()
	err = client.DoAction(request, response)
	return
}

// PhoneNumberEncryptWithChan invokes the dytnsapi.PhoneNumberEncrypt API asynchronously
func (client *Client) PhoneNumberEncryptWithChan(request *PhoneNumberEncryptRequest) (<-chan *PhoneNumberEncryptResponse, <-chan error) {
	responseChan := make(chan *PhoneNumberEncryptResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.PhoneNumberEncrypt(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// PhoneNumberEncryptWithCallback invokes the dytnsapi.PhoneNumberEncrypt API asynchronously
func (client *Client) PhoneNumberEncryptWithCallback(request *PhoneNumberEncryptRequest, callback func(response *PhoneNumberEncryptResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *PhoneNumberEncryptResponse
		var err error
		defer close(result)
		response, err = client.PhoneNumberEncrypt(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// PhoneNumberEncryptRequest is the request struct for api PhoneNumberEncrypt
type PhoneNumberEncryptRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	Mask                 string           `position:"Query" name:"Mask"`
	OfferType            string           `position:"Query" name:"OfferType"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	AuthCode             string           `position:"Query" name:"AuthCode"`
	InputNumber          string           `position:"Query" name:"InputNumber"`
}

// PhoneNumberEncryptResponse is the response struct for api PhoneNumberEncrypt
type PhoneNumberEncryptResponse struct {
	*responses.BaseResponse
	RequestId string     `json:"RequestId" xml:"RequestId"`
	Code      string     `json:"Code" xml:"Code"`
	Message   string     `json:"Message" xml:"Message"`
	Data      []DataItem `json:"Data" xml:"Data"`
}

// CreatePhoneNumberEncryptRequest creates a request to invoke PhoneNumberEncrypt API
func CreatePhoneNumberEncryptRequest() (request *PhoneNumberEncryptRequest) {
	request = &PhoneNumberEncryptRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Dytnsapi", "2020-02-17", "PhoneNumberEncrypt", "", "")
	request.Method = requests.POST
	return
}

// CreatePhoneNumberEncryptResponse creates a response to parse from PhoneNumberEncrypt response
func CreatePhoneNumberEncryptResponse() (response *PhoneNumberEncryptResponse) {
	response = &PhoneNumberEncryptResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
