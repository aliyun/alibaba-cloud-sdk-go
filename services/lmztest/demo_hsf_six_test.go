package lmztest

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DemoHsfSixTest invokes the lmztest.DemoHsfSixTest API synchronously
func (client *Client) DemoHsfSixTest(request *DemoHsfSixTestRequest) (response *DemoHsfSixTestResponse, err error) {
	response = CreateDemoHsfSixTestResponse()
	err = client.DoAction(request, response)
	return
}

// DemoHsfSixTestWithChan invokes the lmztest.DemoHsfSixTest API asynchronously
func (client *Client) DemoHsfSixTestWithChan(request *DemoHsfSixTestRequest) (<-chan *DemoHsfSixTestResponse, <-chan error) {
	responseChan := make(chan *DemoHsfSixTestResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DemoHsfSixTest(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DemoHsfSixTestWithCallback invokes the lmztest.DemoHsfSixTest API asynchronously
func (client *Client) DemoHsfSixTestWithCallback(request *DemoHsfSixTestRequest, callback func(response *DemoHsfSixTestResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DemoHsfSixTestResponse
		var err error
		defer close(result)
		response, err = client.DemoHsfSixTest(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DemoHsfSixTestRequest is the request struct for api DemoHsfSixTest
type DemoHsfSixTestRequest struct {
	*requests.RpcRequest
	StrListMap *[]map[string]map[string]string  `position:"Body" name:"StrListMap"  type:"Json"`
	Data       string                           `position:"Body" name:"Data"`
	Map        string                           `position:"Body" name:"Map"`
	CodeMap    map[string]DemoHsfSixTestCodeMap `position:"Query" name:"codeMap"  type:"Map"`
}

// DemoHsfSixTestCodeMap is a repeated param struct in DemoHsfSixTestRequest
type DemoHsfSixTestCodeMap struct {
	Name string `name:"Name"`
	Id   string `name:"Id"`
}

// DemoHsfSixTestResponse is the response struct for api DemoHsfSixTest
type DemoHsfSixTestResponse struct {
	*responses.BaseResponse
	Code string                   `json:"Code" xml:"Code"`
	Name string                   `json:"Name" xml:"Name"`
	Id   string                   `json:"Id" xml:"Id"`
	Data []map[string]interface{} `json:"Data" xml:"Data"`
}

// CreateDemoHsfSixTestRequest creates a request to invoke DemoHsfSixTest API
func CreateDemoHsfSixTestRequest() (request *DemoHsfSixTestRequest) {
	request = &DemoHsfSixTestRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("LmzTest", "2010-10-11", "DemoHsfSixTest", "", "")
	request.Method = requests.POST
	return
}

// CreateDemoHsfSixTestResponse creates a response to parse from DemoHsfSixTest response
func CreateDemoHsfSixTestResponse() (response *DemoHsfSixTestResponse) {
	response = &DemoHsfSixTestResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
