package dataworks_public

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetMetaTablePartition invokes the dataworks_public.GetMetaTablePartition API synchronously
func (client *Client) GetMetaTablePartition(request *GetMetaTablePartitionRequest) (response *GetMetaTablePartitionResponse, err error) {
	response = CreateGetMetaTablePartitionResponse()
	err = client.DoAction(request, response)
	return
}

// GetMetaTablePartitionWithChan invokes the dataworks_public.GetMetaTablePartition API asynchronously
func (client *Client) GetMetaTablePartitionWithChan(request *GetMetaTablePartitionRequest) (<-chan *GetMetaTablePartitionResponse, <-chan error) {
	responseChan := make(chan *GetMetaTablePartitionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetMetaTablePartition(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetMetaTablePartitionWithCallback invokes the dataworks_public.GetMetaTablePartition API asynchronously
func (client *Client) GetMetaTablePartitionWithCallback(request *GetMetaTablePartitionRequest, callback func(response *GetMetaTablePartitionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetMetaTablePartitionResponse
		var err error
		defer close(result)
		response, err = client.GetMetaTablePartition(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetMetaTablePartitionRequest is the request struct for api GetMetaTablePartition
type GetMetaTablePartitionRequest struct {
	*requests.RpcRequest
	SortCriterion  GetMetaTablePartitionSortCriterion `position:"Query" name:"SortCriterion"  type:"Struct"`
	DataSourceType string                             `position:"Query" name:"DataSourceType"`
	ClusterId      string                             `position:"Query" name:"ClusterId"`
	PageNumber     requests.Integer                   `position:"Query" name:"PageNumber"`
	TableGuid      string                             `position:"Query" name:"TableGuid"`
	DatabaseName   string                             `position:"Query" name:"DatabaseName"`
	PageSize       requests.Integer                   `position:"Query" name:"PageSize"`
	TableName      string                             `position:"Query" name:"TableName"`
}

// GetMetaTablePartitionSortCriterion is a repeated param struct in GetMetaTablePartitionRequest
type GetMetaTablePartitionSortCriterion struct {
	SortField string `name:"SortField"`
	Order     string `name:"Order"`
}

// GetMetaTablePartitionResponse is the response struct for api GetMetaTablePartition
type GetMetaTablePartitionResponse struct {
	*responses.BaseResponse
	HttpStatusCode int                         `json:"HttpStatusCode" xml:"HttpStatusCode"`
	ErrorMessage   string                      `json:"ErrorMessage" xml:"ErrorMessage"`
	RequestId      string                      `json:"RequestId" xml:"RequestId"`
	Success        bool                        `json:"Success" xml:"Success"`
	ErrorCode      string                      `json:"ErrorCode" xml:"ErrorCode"`
	Data           DataInGetMetaTablePartition `json:"Data" xml:"Data"`
}

// CreateGetMetaTablePartitionRequest creates a request to invoke GetMetaTablePartition API
func CreateGetMetaTablePartitionRequest() (request *GetMetaTablePartitionRequest) {
	request = &GetMetaTablePartitionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("dataworks-public", "2020-05-18", "GetMetaTablePartition", "", "")
	request.Method = requests.POST
	return
}

// CreateGetMetaTablePartitionResponse creates a response to parse from GetMetaTablePartition response
func CreateGetMetaTablePartitionResponse() (response *GetMetaTablePartitionResponse) {
	response = &GetMetaTablePartitionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
