package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeUserAvgCountByDay invokes the vod.DescribeUserAvgCountByDay API synchronously
// api document: https://help.aliyun.com/api/vod/describeuseravgcountbyday.html
func (client *Client) DescribeUserAvgCountByDay(request *DescribeUserAvgCountByDayRequest) (response *DescribeUserAvgCountByDayResponse, err error) {
	response = CreateDescribeUserAvgCountByDayResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeUserAvgCountByDayWithChan invokes the vod.DescribeUserAvgCountByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describeuseravgcountbyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeUserAvgCountByDayWithChan(request *DescribeUserAvgCountByDayRequest) (<-chan *DescribeUserAvgCountByDayResponse, <-chan error) {
	responseChan := make(chan *DescribeUserAvgCountByDayResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeUserAvgCountByDay(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeUserAvgCountByDayWithCallback invokes the vod.DescribeUserAvgCountByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describeuseravgcountbyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeUserAvgCountByDayWithCallback(request *DescribeUserAvgCountByDayRequest, callback func(response *DescribeUserAvgCountByDayResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeUserAvgCountByDayResponse
		var err error
		defer close(result)
		response, err = client.DescribeUserAvgCountByDay(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeUserAvgCountByDayRequest is the request struct for api DescribeUserAvgCountByDay
type DescribeUserAvgCountByDayRequest struct {
	*requests.RpcRequest
	VideoType     string           `position:"Query" name:"VideoType"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	EndTime       string           `position:"Query" name:"EndTime"`
	StartTime     string           `position:"Query" name:"StartTime"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeUserAvgCountByDayResponse is the response struct for api DescribeUserAvgCountByDay
type DescribeUserAvgCountByDayResponse struct {
	*responses.BaseResponse
	RequestId               string                                             `json:"RequestId" xml:"RequestId"`
	UserPlayStatisticsInfos UserPlayStatisticsInfosInDescribeUserAvgCountByDay `json:"UserPlayStatisticsInfos" xml:"UserPlayStatisticsInfos"`
}

// CreateDescribeUserAvgCountByDayRequest creates a request to invoke DescribeUserAvgCountByDay API
func CreateDescribeUserAvgCountByDayRequest() (request *DescribeUserAvgCountByDayRequest) {
	request = &DescribeUserAvgCountByDayRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "DescribeUserAvgCountByDay", "vod", "openAPI")
	return
}

// CreateDescribeUserAvgCountByDayResponse creates a response to parse from DescribeUserAvgCountByDay response
func CreateDescribeUserAvgCountByDayResponse() (response *DescribeUserAvgCountByDayResponse) {
	response = &DescribeUserAvgCountByDayResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
