package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeVodDomainsUsageByDay invokes the vod.DescribeVodDomainsUsageByDay API synchronously
// api document: https://help.aliyun.com/api/vod/describevoddomainsusagebyday.html
func (client *Client) DescribeVodDomainsUsageByDay(request *DescribeVodDomainsUsageByDayRequest) (response *DescribeVodDomainsUsageByDayResponse, err error) {
	response = CreateDescribeVodDomainsUsageByDayResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeVodDomainsUsageByDayWithChan invokes the vod.DescribeVodDomainsUsageByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describevoddomainsusagebyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeVodDomainsUsageByDayWithChan(request *DescribeVodDomainsUsageByDayRequest) (<-chan *DescribeVodDomainsUsageByDayResponse, <-chan error) {
	responseChan := make(chan *DescribeVodDomainsUsageByDayResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeVodDomainsUsageByDay(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeVodDomainsUsageByDayWithCallback invokes the vod.DescribeVodDomainsUsageByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describevoddomainsusagebyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeVodDomainsUsageByDayWithCallback(request *DescribeVodDomainsUsageByDayRequest, callback func(response *DescribeVodDomainsUsageByDayResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeVodDomainsUsageByDayResponse
		var err error
		defer close(result)
		response, err = client.DescribeVodDomainsUsageByDay(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeVodDomainsUsageByDayRequest is the request struct for api DescribeVodDomainsUsageByDay
type DescribeVodDomainsUsageByDayRequest struct {
	*requests.RpcRequest
	StartTime  string           `position:"Query" name:"StartTime"`
	DomainName string           `position:"Query" name:"DomainName"`
	EndTime    string           `position:"Query" name:"EndTime"`
	OwnerId    requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeVodDomainsUsageByDayResponse is the response struct for api DescribeVodDomainsUsageByDay
type DescribeVodDomainsUsageByDayResponse struct {
	*responses.BaseResponse
	RequestId    string      `json:"RequestId" xml:"RequestId"`
	DomainName   string      `json:"DomainName" xml:"DomainName"`
	DataInterval string      `json:"DataInterval" xml:"DataInterval"`
	StartTime    string      `json:"StartTime" xml:"StartTime"`
	EndTime      string      `json:"EndTime" xml:"EndTime"`
	UsageTotal   UsageTotal  `json:"UsageTotal" xml:"UsageTotal"`
	UsageByDays  UsageByDays `json:"UsageByDays" xml:"UsageByDays"`
}

// CreateDescribeVodDomainsUsageByDayRequest creates a request to invoke DescribeVodDomainsUsageByDay API
func CreateDescribeVodDomainsUsageByDayRequest() (request *DescribeVodDomainsUsageByDayRequest) {
	request = &DescribeVodDomainsUsageByDayRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "DescribeVodDomainsUsageByDay", "vod", "openAPI")
	return
}

// CreateDescribeVodDomainsUsageByDayResponse creates a response to parse from DescribeVodDomainsUsageByDay response
func CreateDescribeVodDomainsUsageByDayResponse() (response *DescribeVodDomainsUsageByDayResponse) {
	response = &DescribeVodDomainsUsageByDayResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
