package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeVodRefreshQuota invokes the vod.DescribeVodRefreshQuota API synchronously
// api document: https://help.aliyun.com/api/vod/describevodrefreshquota.html
func (client *Client) DescribeVodRefreshQuota(request *DescribeVodRefreshQuotaRequest) (response *DescribeVodRefreshQuotaResponse, err error) {
	response = CreateDescribeVodRefreshQuotaResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeVodRefreshQuotaWithChan invokes the vod.DescribeVodRefreshQuota API asynchronously
// api document: https://help.aliyun.com/api/vod/describevodrefreshquota.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeVodRefreshQuotaWithChan(request *DescribeVodRefreshQuotaRequest) (<-chan *DescribeVodRefreshQuotaResponse, <-chan error) {
	responseChan := make(chan *DescribeVodRefreshQuotaResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeVodRefreshQuota(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeVodRefreshQuotaWithCallback invokes the vod.DescribeVodRefreshQuota API asynchronously
// api document: https://help.aliyun.com/api/vod/describevodrefreshquota.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeVodRefreshQuotaWithCallback(request *DescribeVodRefreshQuotaRequest, callback func(response *DescribeVodRefreshQuotaResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeVodRefreshQuotaResponse
		var err error
		defer close(result)
		response, err = client.DescribeVodRefreshQuota(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeVodRefreshQuotaRequest is the request struct for api DescribeVodRefreshQuota
type DescribeVodRefreshQuotaRequest struct {
	*requests.RpcRequest
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeVodRefreshQuotaResponse is the response struct for api DescribeVodRefreshQuota
type DescribeVodRefreshQuotaResponse struct {
	*responses.BaseResponse
	RequestId     string `json:"RequestId" xml:"RequestId"`
	UrlQuota      string `json:"UrlQuota" xml:"UrlQuota"`
	DirQuota      string `json:"DirQuota" xml:"DirQuota"`
	UrlRemain     string `json:"UrlRemain" xml:"UrlRemain"`
	DirRemain     string `json:"DirRemain" xml:"DirRemain"`
	PreloadQuota  string `json:"PreloadQuota" xml:"PreloadQuota"`
	BlockQuota    string `json:"BlockQuota" xml:"BlockQuota"`
	PreloadRemain string `json:"PreloadRemain" xml:"PreloadRemain"`
	BlockRemain   string `json:"blockRemain" xml:"blockRemain"`
}

// CreateDescribeVodRefreshQuotaRequest creates a request to invoke DescribeVodRefreshQuota API
func CreateDescribeVodRefreshQuotaRequest() (request *DescribeVodRefreshQuotaRequest) {
	request = &DescribeVodRefreshQuotaRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "DescribeVodRefreshQuota", "vod", "openAPI")
	return
}

// CreateDescribeVodRefreshQuotaResponse creates a response to parse from DescribeVodRefreshQuota response
func CreateDescribeVodRefreshQuotaResponse() (response *DescribeVodRefreshQuotaResponse) {
	response = &DescribeVodRefreshQuotaResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
