package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeUserTimeRangeByDay invokes the vod.DescribeUserTimeRangeByDay API synchronously
// api document: https://help.aliyun.com/api/vod/describeusertimerangebyday.html
func (client *Client) DescribeUserTimeRangeByDay(request *DescribeUserTimeRangeByDayRequest) (response *DescribeUserTimeRangeByDayResponse, err error) {
	response = CreateDescribeUserTimeRangeByDayResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeUserTimeRangeByDayWithChan invokes the vod.DescribeUserTimeRangeByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describeusertimerangebyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeUserTimeRangeByDayWithChan(request *DescribeUserTimeRangeByDayRequest) (<-chan *DescribeUserTimeRangeByDayResponse, <-chan error) {
	responseChan := make(chan *DescribeUserTimeRangeByDayResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeUserTimeRangeByDay(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeUserTimeRangeByDayWithCallback invokes the vod.DescribeUserTimeRangeByDay API asynchronously
// api document: https://help.aliyun.com/api/vod/describeusertimerangebyday.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeUserTimeRangeByDayWithCallback(request *DescribeUserTimeRangeByDayRequest, callback func(response *DescribeUserTimeRangeByDayResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeUserTimeRangeByDayResponse
		var err error
		defer close(result)
		response, err = client.DescribeUserTimeRangeByDay(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeUserTimeRangeByDayRequest is the request struct for api DescribeUserTimeRangeByDay
type DescribeUserTimeRangeByDayRequest struct {
	*requests.RpcRequest
	VideoType     string           `position:"Query" name:"VideoType"`
	SecurityToken string           `position:"Query" name:"SecurityToken"`
	EndTime       string           `position:"Query" name:"EndTime"`
	StartTime     string           `position:"Query" name:"StartTime"`
	OwnerId       requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeUserTimeRangeByDayResponse is the response struct for api DescribeUserTimeRangeByDay
type DescribeUserTimeRangeByDayResponse struct {
	*responses.BaseResponse
	RequestId               string                                              `json:"RequestId" xml:"RequestId"`
	UserPlayStatisticsInfos UserPlayStatisticsInfosInDescribeUserTimeRangeByDay `json:"UserPlayStatisticsInfos" xml:"UserPlayStatisticsInfos"`
}

// CreateDescribeUserTimeRangeByDayRequest creates a request to invoke DescribeUserTimeRangeByDay API
func CreateDescribeUserTimeRangeByDayRequest() (request *DescribeUserTimeRangeByDayRequest) {
	request = &DescribeUserTimeRangeByDayRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-03-21", "DescribeUserTimeRangeByDay", "vod", "openAPI")
	return
}

// CreateDescribeUserTimeRangeByDayResponse creates a response to parse from DescribeUserTimeRangeByDay response
func CreateDescribeUserTimeRangeByDayResponse() (response *DescribeUserTimeRangeByDayResponse) {
	response = &DescribeUserTimeRangeByDayResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
