package dts

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeTagValues invokes the dts.DescribeTagValues API synchronously
func (client *Client) DescribeTagValues(request *DescribeTagValuesRequest) (response *DescribeTagValuesResponse, err error) {
	response = CreateDescribeTagValuesResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeTagValuesWithChan invokes the dts.DescribeTagValues API asynchronously
func (client *Client) DescribeTagValuesWithChan(request *DescribeTagValuesRequest) (<-chan *DescribeTagValuesResponse, <-chan error) {
	responseChan := make(chan *DescribeTagValuesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeTagValues(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeTagValuesWithCallback invokes the dts.DescribeTagValues API asynchronously
func (client *Client) DescribeTagValuesWithCallback(request *DescribeTagValuesRequest, callback func(response *DescribeTagValuesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeTagValuesResponse
		var err error
		defer close(result)
		response, err = client.DescribeTagValues(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeTagValuesRequest is the request struct for api DescribeTagValues
type DescribeTagValuesRequest struct {
	*requests.RpcRequest
	PageNumber   requests.Integer `position:"Query" name:"PageNumber"`
	PageSize     requests.Integer `position:"Query" name:"PageSize"`
	Key          string           `position:"Query" name:"Key"`
	ResourceId   string           `position:"Query" name:"ResourceId"`
	ResourceType string           `position:"Query" name:"ResourceType"`
	Category     string           `position:"Query" name:"Category"`
}

// DescribeTagValuesResponse is the response struct for api DescribeTagValues
type DescribeTagValuesResponse struct {
	*responses.BaseResponse
	Category   string   `json:"Category" xml:"Category"`
	RequestId  string   `json:"RequestId" xml:"RequestId"`
	PageSize   int      `json:"PageSize" xml:"PageSize"`
	PageNumber int      `json:"PageNumber" xml:"PageNumber"`
	TotalCount int      `json:"TotalCount" xml:"TotalCount"`
	TagValues  []string `json:"TagValues" xml:"TagValues"`
}

// CreateDescribeTagValuesRequest creates a request to invoke DescribeTagValues API
func CreateDescribeTagValuesRequest() (request *DescribeTagValuesRequest) {
	request = &DescribeTagValuesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Dts", "2020-01-01", "DescribeTagValues", "dts", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeTagValuesResponse creates a response to parse from DescribeTagValues response
func CreateDescribeTagValuesResponse() (response *DescribeTagValuesResponse) {
	response = &DescribeTagValuesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
