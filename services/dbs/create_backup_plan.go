package dbs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateBackupPlan invokes the dbs.CreateBackupPlan API synchronously
func (client *Client) CreateBackupPlan(request *CreateBackupPlanRequest) (response *CreateBackupPlanResponse, err error) {
	response = CreateCreateBackupPlanResponse()
	err = client.DoAction(request, response)
	return
}

// CreateBackupPlanWithChan invokes the dbs.CreateBackupPlan API asynchronously
func (client *Client) CreateBackupPlanWithChan(request *CreateBackupPlanRequest) (<-chan *CreateBackupPlanResponse, <-chan error) {
	responseChan := make(chan *CreateBackupPlanResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateBackupPlan(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateBackupPlanWithCallback invokes the dbs.CreateBackupPlan API asynchronously
func (client *Client) CreateBackupPlanWithCallback(request *CreateBackupPlanRequest, callback func(response *CreateBackupPlanResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateBackupPlanResponse
		var err error
		defer close(result)
		response, err = client.CreateBackupPlan(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateBackupPlanRequest is the request struct for api CreateBackupPlan
type CreateBackupPlanRequest struct {
	*requests.RpcRequest
	DatabaseType    string           `position:"Query" name:"DatabaseType"`
	ClientToken     string           `position:"Query" name:"ClientToken"`
	InstanceClass   string           `position:"Query" name:"InstanceClass"`
	StorageType     string           `position:"Query" name:"StorageType"`
	DatabaseRegion  string           `position:"Query" name:"DatabaseRegion"`
	ResourceGroupId string           `position:"Query" name:"ResourceGroupId"`
	InstanceType    string           `position:"Query" name:"InstanceType"`
	Period          string           `position:"Query" name:"Period"`
	FromApp         string           `position:"Query" name:"FromApp"`
	OwnerId         string           `position:"Query" name:"OwnerId"`
	UsedTime        requests.Integer `position:"Query" name:"UsedTime"`
	BackupMethod    string           `position:"Query" name:"BackupMethod"`
	StorageRegion   string           `position:"Query" name:"StorageRegion"`
	Region          string           `position:"Query" name:"Region"`
	PayType         string           `position:"Query" name:"PayType"`
}

// CreateBackupPlanResponse is the response struct for api CreateBackupPlan
type CreateBackupPlanResponse struct {
	*responses.BaseResponse
	HttpStatusCode int    `json:"HttpStatusCode" xml:"HttpStatusCode"`
	RequestId      string `json:"RequestId" xml:"RequestId"`
	ErrCode        string `json:"ErrCode" xml:"ErrCode"`
	Success        bool   `json:"Success" xml:"Success"`
	ErrMessage     string `json:"ErrMessage" xml:"ErrMessage"`
	BackupPlanId   string `json:"BackupPlanId" xml:"BackupPlanId"`
	OrderId        string `json:"OrderId" xml:"OrderId"`
}

// CreateCreateBackupPlanRequest creates a request to invoke CreateBackupPlan API
func CreateCreateBackupPlanRequest() (request *CreateBackupPlanRequest) {
	request = &CreateBackupPlanRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Dbs", "2019-03-06", "CreateBackupPlan", "", "")
	request.Method = requests.POST
	return
}

// CreateCreateBackupPlanResponse creates a response to parse from CreateBackupPlan response
func CreateCreateBackupPlanResponse() (response *CreateBackupPlanResponse) {
	response = &CreateBackupPlanResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
